A graphical model or probabilistic graphical model (PGM) or structured probabilistic model is a probabilistic model for which a graph expresses the conditional dependence structure between random variables. They are commonly used in probability theory, statistics\u2014particularly Bayesian statistics\u2014and machine learning.\n\n\n== Types of graphical models ==\nGenerally, probabilistic graphical models use a graph-based representation as the foundation for encoding a  distribution over a multi-dimensional space and a graph that is a compact or factorized representation of a set of independences that hold in the specific distribution. Two branches of graphical representations of distributions are commonly used, namely, Bayesian networks and Markov random fields. Both families encompass the properties of factorization and independences, but they differ in the set of independences they can encode and the factorization of the distribution that they induce.\n\n\n=== Bayesian network ===\n\nIf the network structure of the model is a directed acyclic graph, the model represents a factorization of the joint probability of all random variables.  More precisely, if the events are \n  \n    \n      \n        \n          X\n          \n            1\n          \n        \n        ,\n        \u2026\n        ,\n        \n          X\n          \n            n\n          \n        \n      \n    \n    {\\displaystyle X_{1},\\ldots ,X_{n}}\n   then the joint probability satisfies\n\n  \n    \n      \n        P\n        [\n        \n          X\n          \n            1\n          \n        \n        ,\n        \u2026\n        ,\n        \n          X\n          \n            n\n          \n        \n        ]\n        =\n        \n          \u220f\n          \n            i\n            =\n            1\n          \n          \n            n\n          \n        \n        P\n        [\n        \n          X\n          \n            i\n          \n        \n        \n          |\n        \n        \n          pa\n        \n        (\n        \n          X\n          \n            i\n          \n        \n        )\n        ]\n      \n    \n    {\\displaystyle P[X_{1},\\ldots ,X_{n}]=\\prod _{i=1}^{n}P[X_{i}|{\\text{pa}}(X_{i})]}\n  where \n  \n    \n      \n        \n          pa\n        \n        (\n        \n          X\n          \n            i\n          \n        \n        )\n      \n    \n    {\\displaystyle {\\text{pa}}(X_{i})}\n   is the set of parents of node \n  \n    \n      \n        \n          X\n          \n            i\n          \n        \n      \n    \n    {\\displaystyle X_{i}}\n   (nodes with edges directed towards \n  \n    \n      \n        \n          X\n          \n            i\n          \n        \n      \n    \n    {\\displaystyle X_{i}}\n  ).  In other words, the joint distribution factors into a product of conditional distributions. For example, the graphical model in the Figure shown above (which is actually not a directed acyclic graph, but an ancestral graph) consists of the random variables \n  \n    \n      \n        A\n        ,\n        B\n        ,\n        C\n        ,\n        D\n      \n    \n    {\\displaystyle A,B,C,D}\n  \nwith a joint probability density that factors as\n\n  \n    \n      \n        P\n        [\n        A\n        ,\n        B\n        ,\n        C\n        ,\n        D\n        ]\n        =\n        P\n        [\n        A\n        ]\n        \u22c5\n        P\n        [\n        B\n        ]\n        \u22c5\n        P\n        [\n        C\n        ,\n        D\n        \n          |\n        \n        A\n        ,\n        B\n        ]\n      \n    \n    {\\displaystyle P[A,B,C,D]=P[A]\\cdot P[B]\\cdot P[C,D|A,B]}\n  Any two nodes are conditionally independent given the values of their parents.  In general, any two sets of nodes are conditionally independent given a third set if a criterion called d-separation holds in the graph.  Local independences and global independences are equivalent in Bayesian networks.\nThis type of graphical model is known as a directed graphical model, Bayesian network, or belief network. Classic machine learning models like hidden Markov models, neural networks and newer models such as variable-order Markov models can be considered special cases of Bayesian networks.\n\n\n=== Other types ===\nNaive Bayes classifier where we use a tree with a single root\nDependency network  where cycles are allowed\nTree-augmented classifier or TAN model\nA factor graph is an undirected bipartite graph connecting variables and factors. Each factor represents a function over the variables it is connected to. This is a helpful representation for understanding and implementing belief propagation.\nA clique tree or junction tree is a tree of cliques, used in the junction tree algorithm.\nA chain graph is a graph which may have both directed and undirected edges, but without any directed cycles (i.e. if we start at any vertex and move along the graph respecting the directions of any arrows, we cannot return to the vertex we started from if we have passed an arrow). Both directed acyclic graphs and undirected graphs are special cases of chain graphs, which can therefore provide a way of unifying and generalizing Bayesian and Markov networks.\nAn ancestral graph is a further extension, having directed, bidirected and undirected edges.\nRandom field techniques\nA Markov random field, also known as a Markov network, is a model over an undirected graph. A graphical model with many repeated subunits can be represented with plate notation.\nA conditional random field is a discriminative model specified over an undirected graph.\nA restricted Boltzmann machine is a bipartite generative model specified over an undirected graph.\n\n\n== Applications ==\nThe framework of the models, which provides algorithms for discovering and analyzing structure in complex distributions  to describe them succinctly and extract the unstructured information, allows them to be constructed and utilized effectively. Applications of graphical models include causal inference, information extraction, speech recognition, computer vision, decoding of low-density parity-check codes, modeling of gene regulatory networks, gene finding and diagnosis of diseases, and graphical models for protein structure.\n\n\n== See also ==\nBelief propagation\nStructural equation model\n\n\n== Notes ==\n\n\n== Further reading ==\n\n\n=== Books and book chapters ===\nBarber, David (2012). Bayesian Reasoning and Machine Learning. Cambridge University Press. ISBN 978-0-521-51814-7.Bishop, Christopher M. (2006). "Chapter 8. Graphical Models" (PDF). Pattern Recognition and Machine Learning. Springer. pp. 359\u2013422. ISBN 978-0-387-31073-2. MR 2247587.\nCowell, Robert G.; Dawid, A. Philip; Lauritzen, Steffen L.; Spiegelhalter, David J. (1999). Probabilistic networks and expert systems. Berlin: Springer. ISBN 978-0-387-98767-5. MR 1697175. A more advanced and statistically oriented book\nJensen, Finn (1996). An introduction to Bayesian networks. Berlin: Springer. ISBN 978-0-387-91502-9.\nPearl, Judea (1988). Probabilistic Reasoning in Intelligent Systems (2nd revised ed.). San Mateo, CA: Morgan Kaufmann. ISBN 978-1-55860-479-7. MR 0965765. A computational reasoning approach, where the relationships between graphs and probabilities were formally introduced.\n\n\n=== Journal articles ===\nEdoardo M. Airoldi (2007). "Getting Started in Probabilistic Graphical Models". PLoS Computational Biology. 3 (12): e252. doi:10.1371/journal.pcbi.0030252. PMC 2134967. PMID 18069887.\nJordan, M. I. (2004). "Graphical Models". Statistical Science. 19: 140\u2013155. doi:10.1214/088342304000000026.\nGhahramani, Zoubin (May 2015). "Probabilistic machine learning and artificial intelligence". Nature. 521 (7553): 452\u2013459. doi:10.1038/nature14541. PMID 26017444.\n\n\n=== Other ===\nHeckerman's Bayes Net Learning Tutorial\nA Brief Introduction to Graphical Models and Bayesian Networks\nSargur Srihari's lecture slides on probabilistic graphical models\n\n\n== External links ==\nGraphical models and Conditional Random Fields\nProbabilistic Graphical Models taught by Eric Xing at CMU