In data mining and statistics, hierarchical clustering (also called hierarchical cluster analysis or HCA) is a method of cluster analysis which seeks to build a hierarchy of clusters. Strategies for hierarchical clustering generally fall into two types:\nAgglomerative: This is a "bottom-up" approach: each observation starts in its own cluster, and pairs of clusters are merged as one moves up the hierarchy.\nDivisive: This is a "top-down" approach: all observations start in one cluster, and splits are performed recursively as one moves down the hierarchy.In general, the merges and splits are determined in a greedy manner. The results of hierarchical clustering are usually presented in a dendrogram.\nThe standard algorithm for hierarchical agglomerative clustering (HAC) has a time complexity of \n  \n    \n      \n        \n          \n            O\n          \n        \n        (\n        \n          n\n          \n            3\n          \n        \n        )\n      \n    \n    {\\displaystyle {\\mathcal {O}}(n^{3})}\n   and requires \n  \n    \n      \n        \n          \n            O\n          \n        \n        (\n        \n          n\n          \n            2\n          \n        \n        )\n      \n    \n    {\\displaystyle {\\mathcal {O}}(n^{2})}\n   memory, which makes it too slow for even medium data sets. However, for some special cases, optimal efficient agglomerative methods (of complexity \n  \n    \n      \n        \n          \n            O\n          \n        \n        (\n        \n          n\n          \n            2\n          \n        \n        )\n      \n    \n    {\\displaystyle {\\mathcal {O}}(n^{2})}\n  ) are known: SLINK for single-linkage and CLINK for complete-linkage clustering. With a heap the runtime of the general case can be reduced to \n  \n    \n      \n        \n          \n            O\n          \n        \n        (\n        \n          n\n          \n            2\n          \n        \n        log\n        \u2061\n        n\n        )\n      \n    \n    {\\displaystyle {\\mathcal {O}}(n^{2}\\log n)}\n   at the cost of further increasing the memory requirements. In many cases, the memory overheads of this approach are too large to make it practically usable.\nExcept for the special case of single-linkage, none of the algorithms (except exhaustive search in \n  \n    \n      \n        \n          \n            O\n          \n        \n        (\n        \n          2\n          \n            n\n          \n        \n        )\n      \n    \n    {\\displaystyle {\\mathcal {O}}(2^{n})}\n  ) can be guaranteed to find the optimum solution.\nDivisive clustering with an exhaustive search is \n  \n    \n      \n        \n          \n            O\n          \n        \n        (\n        \n          2\n          \n            n\n          \n        \n        )\n      \n    \n    {\\displaystyle {\\mathcal {O}}(2^{n})}\n  , but it is common to use faster heuristics to choose splits, such as k-means.\n\n\n== Cluster dissimilarity ==\nIn order to decide which clusters should be combined (for agglomerative), or where a cluster should be split (for divisive), a measure of dissimilarity between sets of observations is required. In most methods of hierarchical clustering, this is achieved by use of an appropriate metric (a measure of distance between pairs of observations), and a linkage criterion which specifies the dissimilarity of sets as a function of the pairwise distances of observations in the sets.\n\n\n=== Metric ===\n\nThe choice of an appropriate metric will influence the shape of the clusters, as some elements may be relatively closer to one another under one metric than another. For example, in two dimensions, under the Manhattan distance metric, the distance between the origin (0,0) and (.5, .5) is the same as the distance between the origin and (0, 1), while under the Euclidean distance metric the latter is strictly greater.\nSome commonly used metrics for hierarchical clustering are:\nFor text or other non-numeric data, metrics such as the Hamming distance or Levenshtein distance are often used.\nA review of cluster analysis in health psychology research found that the most common distance measure in published studies in that research area is the Euclidean distance or the squared Euclidean distance.\n\n\n=== Linkage criteria ===\nThe linkage criterion determines the distance between sets of observations as a function of the pairwise distances between observations.\nSome commonly used linkage criteria between two sets of observations A and B are:\nwhere d is the chosen metric.  Other linkage criteria include:\n\nThe sum of all intra-cluster variance.\nThe increase in variance for the cluster being merged (Ward's criterion).\nThe probability that candidate clusters spawn from the same distribution function (V-linkage).\nThe product of in-degree and out-degree on a k-nearest-neighbour graph (graph degree linkage).\nThe increment of some cluster descriptor (i.e., a quantity defined for measuring the quality of a cluster) after merging two clusters.\n\n\n== Discussion ==\nHierarchical clustering has the distinct advantage that any valid measure of distance can be used. In fact, the observations themselves are not required: all that is used is a matrix of distances.\n\n\n== Agglomerative clustering example ==\n\nFor example, suppose this data is to be clustered, and the Euclidean distance is the distance metric.\nThe hierarchical clustering dendrogram would be as such:\n\nCutting the tree at a given height will give a partitioning clustering at a selected precision. In this example, cutting after the second row (from the top) of the dendrogram will yield clusters {a} {b c} {d e} {f}. Cutting after the third row will yield clusters {a} {b c} {d e f}, which is a coarser clustering, with a smaller number but larger clusters.\nThis method builds the hierarchy from the individual elements by progressively merging clusters. In our example, we have six elements {a} {b} {c} {d} {e} and {f}. The first step is to determine which elements to merge in a cluster. Usually, we want to take the two closest elements, according to the chosen distance.\nOptionally, one can also construct a distance matrix at this stage, where the number in the i-th row j-th column is the distance between the i-th and j-th elements. Then, as clustering progresses, rows and columns are merged as the clusters are merged and the distances updated. This is a common way to implement this type of clustering, and has the benefit of caching distances between clusters. A simple agglomerative clustering algorithm is described in the single-linkage clustering page; it can easily be adapted to different types of linkage (see below).\nSuppose we have merged the two closest elements b and c, we now have the following clusters {a}, {b, c}, {d}, {e} and {f}, and want to merge them further. To do that, we need to take the distance between {a} and {b c}, and therefore define the distance between two clusters.\nUsually the distance between two clusters \n  \n    \n      \n        \n          \n            A\n          \n        \n      \n    \n    {\\displaystyle {\\mathcal {A}}}\n   and \n  \n    \n      \n        \n          \n            B\n          \n        \n      \n    \n    {\\displaystyle {\\mathcal {B}}}\n   is one of the following:\n\nThe maximum distance between elements of each cluster (also called complete-linkage clustering):\n  \n    \n      \n        max\n        {\n        \n        d\n        (\n        x\n        ,\n        y\n        )\n        :\n        x\n        \u2208\n        \n          \n            A\n          \n        \n        ,\n        \n        y\n        \u2208\n        \n          \n            B\n          \n        \n        \n        }\n        .\n      \n    \n    {\\displaystyle \\max\\{\\,d(x,y):x\\in {\\mathcal {A}},\\,y\\in {\\mathcal {B}}\\,\\}.}\n  The minimum distance between elements of each cluster (also called single-linkage clustering):\n  \n    \n      \n        min\n        {\n        \n        d\n        (\n        x\n        ,\n        y\n        )\n        :\n        x\n        \u2208\n        \n          \n            A\n          \n        \n        ,\n        \n        y\n        \u2208\n        \n          \n            B\n          \n        \n        \n        }\n        .\n      \n    \n    {\\displaystyle \\min\\{\\,d(x,y):x\\in {\\mathcal {A}},\\,y\\in {\\mathcal {B}}\\,\\}.}\n  The mean distance between elements of each cluster (also called average linkage clustering, used e.g. in UPGMA):\n  \n    \n      \n        \n          \n            1\n            \n              \n                |\n              \n              \n                \n                  A\n                \n              \n              \n                |\n              \n              \u22c5\n              \n                |\n              \n              \n                \n                  B\n                \n              \n              \n                |\n              \n            \n          \n        \n        \n          \u2211\n          \n            x\n            \u2208\n            \n              \n                A\n              \n            \n          \n        \n        \n          \u2211\n          \n            y\n            \u2208\n            \n              \n                B\n              \n            \n          \n        \n        d\n        (\n        x\n        ,\n        y\n        )\n        .\n      \n    \n    {\\displaystyle {1 \\over {|{\\mathcal {A}}|\\cdot |{\\mathcal {B}}|}}\\sum _{x\\in {\\mathcal {A}}}\\sum _{y\\in {\\mathcal {B}}}d(x,y).}\n  The sum of all intra-cluster variance.\nThe increase in variance for the cluster being merged (Ward's method)\nThe probability that candidate clusters spawn from the same distribution function (V-linkage).In case of tied minimum distances, a pair is randomly chosen, thus being able to generate several structurally different dendrograms. Alternatively, all tied pairs may be joined at the same time, generating a unique dendrogram.One can always decide to stop clustering when there is a sufficiently small number of clusters (number criterion). Some linkages may also guarantee that agglomeration occurs at a greater distance between clusters than the previous agglomeration, and then one can stop clustering when the clusters are too far apart to be merged (distance criterion). However, this is not the case of, e.g., the centroid linkage where the so-called reversals (inversions, departures from ultrametricity) may occur.\n\n\n== Divisive clustering ==\nThe basic principle of divisive clustering was published as the DIANA (DIvisive ANAlysis Clustering) algorithm. Initially, all data is in the same cluster, and the largest cluster is split until every object is separate.\nBecause there exist \n  \n    \n      \n        O\n        (\n        \n          2\n          \n            n\n          \n        \n        )\n      \n    \n    {\\displaystyle O(2^{n})}\n   ways of splitting each cluster, heuristics are needed. DIANA chooses the object with the maximum average dissimilarity and then moves all objects to this cluster that are more similar to the new cluster than to the remainder.\n\n\n== Software ==\n\n\n=== Open source implementations ===\n\nALGLIB implements several hierarchical clustering algorithms (single-link, complete-link, Ward) in C++ and C# with O(n\xb2) memory and O(n\xb3) run time.\nELKI includes multiple hierarchical clustering algorithms, various linkage strategies and also includes the efficient SLINK, CLINK and Anderberg algorithms, flexible cluster extraction from dendrograms and various other cluster analysis algorithms.\nOctave, the GNU analog to MATLAB implements hierarchical clustering in function "linkage".\nOrange, a data mining software suite, includes hierarchical clustering with interactive dendrogram visualisation.\nR has many packages that provide functions for hierarchical clustering.\nSciPy implements hierarchical clustering in Python, including the efficient SLINK algorithm.\nscikit-learn also implements hierarchical clustering in Python.\nWeka includes hierarchical cluster analysis.\n\n\n=== Commercial implementations ===\nMATLAB includes hierarchical cluster analysis.\nSAS includes hierarchical cluster analysis in PROC CLUSTER.\nMathematica includes a Hierarchical Clustering Package.\nNCSS includes hierarchical cluster analysis.\nSPSS includes hierarchical cluster analysis.\nQlucore Omics Explorer includes hierarchical cluster analysis.\nStata includes hierarchical cluster analysis.\nCrimeStat includes a nearest neighbor hierarchical cluster algorithm with a graphical output for a Geographic Information System.\n\n\n== See also ==\n\n\n== References ==\n\n\n== Further reading ==\nKaufman, L.; Rousseeuw, P.J. (1990). Finding Groups in Data: An Introduction to Cluster Analysis (1 ed.). New York: John Wiley. ISBN 0-471-87876-6.\nHastie, Trevor; Tibshirani, Robert; Friedman, Jerome (2009). "14.3.12 Hierarchical clustering". The Elements of Statistical Learning (2nd ed.). New York: Springer. pp. 520\u2013528. ISBN 978-0-387-84857-0. Archived from the original (PDF) on 2009-11-10. Retrieved 2009-10-20.