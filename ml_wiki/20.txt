In statistics and machine learning, ensemble methods use multiple learning algorithms to obtain better predictive performance than could be obtained from any of the constituent learning algorithms alone.\nUnlike a statistical ensemble in statistical mechanics, which is usually infinite, a machine learning ensemble consists of only a concrete finite set of alternative models, but typically allows for much more flexible structure to exist among those alternatives.\n\n\n== Overview ==\nSupervised learning algorithms perform the task of searching through a hypothesis space to find a suitable hypothesis that will make good predictions with a particular problem. Even if the hypothesis space contains hypotheses that are very well-suited for a particular problem, it may be very difficult to find a good one. Ensembles combine multiple hypotheses to form a (hopefully) better hypothesis. The term ensemble is usually reserved for methods that generate multiple hypotheses using the same base learner.\nThe broader term of multiple classifier systems also covers hybridization of hypotheses that are not induced by the same base learner.Evaluating the prediction of an ensemble typically requires more computation than evaluating the prediction of a single model, so ensembles may be thought of as a way to compensate for poor learning algorithms by performing a lot of extra computation. Fast algorithms such as decision trees are commonly used in ensemble methods (for example, random forests), although slower algorithms can benefit from ensemble techniques as well.\nBy analogy, ensemble techniques have been used also in unsupervised learning scenarios, for example in consensus clustering or in anomaly detection.\n\n\n== Ensemble theory ==\nAn ensemble is itself a supervised learning algorithm, because it can be trained and then used to make predictions. The trained ensemble, therefore, represents a single hypothesis. This hypothesis, however, is not necessarily contained within the hypothesis space of the models from which it is built. Thus, ensembles can be shown to have more flexibility in the functions they can represent. This flexibility can, in theory, enable them to over-fit the training data more than a single model would, but in practice, some ensemble techniques (especially bagging) tend to reduce problems related to over-fitting of the training data.Empirically, ensembles tend to yield better results when there is a significant diversity among the models. Many ensemble methods, therefore, seek to promote diversity among the models they combine. Although perhaps non-intuitive, more random algorithms (like random decision trees) can be used to produce a stronger ensemble than very deliberate algorithms (like entropy-reducing decision trees). Using a variety of strong learning algorithms, however, has been shown to be more effective than using techniques that attempt to dumb-down the models in order to promote diversity.\n\n\n== Ensemble size ==\nWhile the number of component classifiers of an ensemble has a great impact on the accuracy of prediction, there is a limited number of studies addressing this problem. A priori determining of ensemble size and the volume and velocity of big data streams make this even more crucial for online ensemble classifiers. Mostly statistical tests were used for determining the proper number of components. More recently, a theoretical framework suggested that there is an ideal number of component classifiers for an ensemble such that having more or less than this number of classifiers would deteriorate the accuracy. It is called "the law of diminishing returns in ensemble construction." Their theoretical framework shows that using the same number of independent component classifiers as class labels gives the highest accuracy.\n\n\n== Common types of ensembles ==\n\n\n=== Bayes optimal classifier ===\nThe Bayes optimal classifier is a classification technique. It is an ensemble of all the hypotheses in the hypothesis space. On average, no other ensemble can outperform it. The naive Bayes optimal classifier is a version of this that assumes that the data is conditionally independent on the class and makes the computation more feasible. Each hypothesis is given a vote proportional to the likelihood that the training dataset would be sampled from a system if that hypothesis were true. To facilitate training data of finite size, the vote of each hypothesis is also multiplied by the prior probability of that hypothesis. The Bayes optimal classifier can be expressed with the following equation:\n\n  \n    \n      \n        y\n        =\n        \n          \n            \n              a\n              r\n              g\n              m\n              a\n              x\n            \n            \n              \n                c\n                \n                  j\n                \n              \n              \u2208\n              C\n            \n          \n        \n        \n          \u2211\n          \n            \n              h\n              \n                i\n              \n            \n            \u2208\n            H\n          \n        \n        \n          P\n          (\n          \n            c\n            \n              j\n            \n          \n          \n            |\n          \n          \n            h\n            \n              i\n            \n          \n          )\n          P\n          (\n          T\n          \n            |\n          \n          \n            h\n            \n              i\n            \n          \n          )\n          P\n          (\n          \n            h\n            \n              i\n            \n          \n          )\n        \n      \n    \n    {\\displaystyle y={\\underset {c_{j}\\in C}{\\mathrm {argmax} }}\\sum _{h_{i}\\in H}{P(c_{j}|h_{i})P(T|h_{i})P(h_{i})}}\n  where \n  \n    \n      \n        y\n      \n    \n    {\\displaystyle y}\n   is the predicted class, \n  \n    \n      \n        C\n      \n    \n    {\\displaystyle C}\n   is the set of all possible classes, \n  \n    \n      \n        H\n      \n    \n    {\\displaystyle H}\n   is the hypothesis space, \n  \n    \n      \n        P\n      \n    \n    {\\displaystyle P}\n   refers to a probability, and \n  \n    \n      \n        T\n      \n    \n    {\\displaystyle T}\n   is the training data. As an ensemble, the Bayes optimal classifier represents a hypothesis that is not necessarily in \n  \n    \n      \n        H\n      \n    \n    {\\displaystyle H}\n  . The hypothesis represented by the Bayes optimal classifier, however, is the optimal hypothesis in ensemble space (the space of all possible ensembles consisting only of hypotheses in \n  \n    \n      \n        H\n      \n    \n    {\\displaystyle H}\n  ).\nThis formula can be restated using Bayes' theorem, which says that the posterior is proportional to the likelihood times the prior:\n\n  \n    \n      \n        P\n        (\n        \n          h\n          \n            i\n          \n        \n        \n          |\n        \n        T\n        )\n        \u221d\n        P\n        (\n        T\n        \n          |\n        \n        \n          h\n          \n            i\n          \n        \n        )\n        P\n        (\n        \n          h\n          \n            i\n          \n        \n        )\n      \n    \n    {\\displaystyle P(h_{i}|T)\\propto P(T|h_{i})P(h_{i})}\n  hence,\n\n  \n    \n      \n        y\n        =\n        \n          \n            \n              a\n              r\n              g\n              m\n              a\n              x\n            \n            \n              \n                c\n                \n                  j\n                \n              \n              \u2208\n              C\n            \n          \n        \n        \n          \u2211\n          \n            \n              h\n              \n                i\n              \n            \n            \u2208\n            H\n          \n        \n        \n          P\n          (\n          \n            c\n            \n              j\n            \n          \n          \n            |\n          \n          \n            h\n            \n              i\n            \n          \n          )\n          P\n          (\n          \n            h\n            \n              i\n            \n          \n          \n            |\n          \n          T\n          )\n        \n      \n    \n    {\\displaystyle y={\\underset {c_{j}\\in C}{\\mathrm {argmax} }}\\sum _{h_{i}\\in H}{P(c_{j}|h_{i})P(h_{i}|T)}}\n  \n\n\n=== Bootstrap aggregating (bagging) ===\n\nBootstrap aggregating, often abbreviated as bagging, involves having each model in the ensemble vote with equal weight. In order to promote model variance, bagging trains each model in the ensemble using a randomly drawn subset of the training set. As an example, the random forest algorithm combines random decision trees with bagging to achieve very high classification accuracy.In bagging the samples are generated in such a way that the samples are different from each other however replacement is allowed. Replacement means that an instance can occur in multiple samples a multiple times or it can not appear in some samples at all. These samples are then given to multiple learners and then the results from each learner are combined in the form of voting.\n\n\n=== Boosting ===\n\nBoosting involves incrementally building an ensemble by training each new model instance to emphasize the training instances that previous models mis-classified. In some cases, boosting has been shown to yield better accuracy than bagging, but it also tends to be more likely to over-fit the training data. By far, the most common implementation of boosting is Adaboost, although some newer algorithms are reported to achieve better results.In Boosting, an equal weight (uniform probability distribution) is given to the sample training data (say D1) at the very starting round. This data (D1) is then given to a base learner (say L1). The mis-classified instances by L1 are assigned a weight higher than the correctly classified instances, but keeping in mind that the total probability distribution will be equal to 1. This boosted data (say D2) is then given to second base learner (say L2) and so on. The results are then combined in the form of voting.\n\n\n=== Bayesian model averaging ===\nBayesian model averaging (BMA) is an ensemble technique that seeks to approximate the Bayes optimal classifier by sampling hypotheses from the hypothesis space, and combining them using Bayes' law. Unlike the Bayes optimal classifier, Bayesian model averaging (BMA) can be practically implemented. Hypotheses are typically sampled using a Monte Carlo sampling technique such as MCMC. For example, Gibbs sampling may be used to draw hypotheses that are representative of the distribution \n  \n    \n      \n        P\n        (\n        T\n        \n          |\n        \n        H\n        )\n      \n    \n    {\\displaystyle P(T|H)}\n  . It has been shown that under certain circumstances, when hypotheses are drawn in this manner and averaged according to Bayes' law, this technique has an expected error that is bounded to be at most twice the expected error of the Bayes optimal classifier. Despite the theoretical correctness of this technique, early work showed experimental results suggesting that the method promoted over-fitting and performed worse compared to simpler ensemble techniques such as bagging; however, these conclusions appear to be based on a misunderstanding of the purpose of Bayesian model averaging vs. model combination. Additionally, there have been considerable advances in theory and practice of BMA. Recent rigorous proofs demonstrate the accuracy of BMA in variable selection and estimation in high-dimensional settings, and provide empirical evidence highlighting the role of sparsity-enforcing priors within the BMA in alleviating overfitting.\n\n\n=== Bayesian model combination ===\nBayesian model combination (BMC) is an algorithmic correction to Bayesian model averaging (BMA). Instead of sampling each model in the ensemble individually, it samples from the space of possible ensembles (with model weightings drawn randomly from a Dirichlet distribution having uniform parameters). This modification overcomes the tendency of BMA to converge toward giving all of the weight to a single model. Although BMC is somewhat more computationally expensive than BMA, it tends to yield dramatically better results. The results from BMC have been shown to be better on average (with statistical significance) than BMA, and bagging.The use of Bayes' law to compute model weights necessitates computing the probability of the data given each model. Typically, none of the models in the ensemble are exactly the distribution from which the training data were generated, so all of them correctly receive a value close to zero for this term. This would work well if the ensemble were big enough to sample the entire model-space, but such is rarely possible. Consequently, each pattern in the training data will cause the ensemble weight to shift toward the model in the ensemble that is closest to the distribution of the training data. It essentially reduces to an unnecessarily complex method for doing model selection.\nThe possible weightings for an ensemble can be visualized as lying on a simplex. At each vertex of the simplex, all of the weight is given to a single model in the ensemble. BMA converges toward the vertex that is closest to the distribution of the training data. By contrast, BMC converges toward the point where this distribution projects onto the simplex. In other words, instead of selecting the one model that is closest to the generating distribution, it seeks the combination of models that is closest to the generating distribution.\nThe results from BMA can often be approximated by using cross-validation to select the best model from a bucket of models. Likewise, the results from BMC may be approximated by using cross-validation to select the best ensemble combination from a random sampling of possible weightings.\n\n\n=== Bucket of models ===\nA "bucket of models" is an ensemble technique in which a model selection algorithm is used to choose the best model for each problem. When tested with only one problem, a bucket of models can produce no better results than the best model in the set, but when evaluated across many problems, it will typically produce much better results, on average, than any model in the set.\nThe most common approach used for model-selection is cross-validation selection (sometimes called a "bake-off contest"). It is described with the following pseudo-code:\n\nFor each model m in the bucket:\n    Do c times: (where 'c' is some constant)\n        Randomly divide the training dataset into two datasets: A, and B.\n        Train m with A\n        Test m with B\nSelect the model that obtains the highest average score\n\nCross-Validation Selection can be summed up as: "try them all with the training set, and pick the one that works best".Gating is a generalization of Cross-Validation Selection. It involves training another learning model to decide which of the models in the bucket is best-suited to solve the problem. Often, a perceptron is used for the gating model. It can be used to pick the "best" model, or it can be used to give a linear weight to the predictions from each model in the bucket.\nWhen a bucket of models is used with a large set of problems, it may be desirable to avoid training some of the models that take a long time to train. Landmark learning is a meta-learning approach that seeks to solve this problem. It involves training only the fast (but imprecise) algorithms in the bucket, and then using the performance of these algorithms to help determine which slow (but accurate) algorithm is most likely to do best.\n\n\n=== Stacking ===\nStacking (sometimes called stacked generalization) involves training a learning algorithm to combine the predictions of several other learning algorithms. First, all of the other algorithms are trained using the available data, then a combiner algorithm is trained to make a final prediction using all the predictions of the other algorithms as additional inputs. If an arbitrary combiner algorithm is used, then stacking can theoretically represent any of the ensemble techniques described in this article, although, in practice, a logistic regression model is often used as the combiner.\nStacking typically yields performance better than any single one of the trained models. \nIt has been successfully used on both supervised learning tasks \n(regression, classification and distance learning )\nand unsupervised learning (density estimation). It has also been used to\nestimate bagging's error rate. It has been reported to out-perform Bayesian model-averaging.\nThe two top-performers in the Netflix competition utilized blending, which may be considered to be a form of stacking.\n\n\n== Implementations in statistics packages ==\nR: at least three packages offer Bayesian model averaging tools, including the BMS (an acronym for Bayesian Model Selection) package, the BAS (an acronym for Bayesian Adaptive Sampling) package, and the BMA package.\nPython: Scikit-learn, a package for machine learning in Python offers packages for ensemble learning including packages for bagging and averaging methods.\nMATLAB: classification ensembles are implemented in Statistics and Machine Learning Toolbox.\n\n\n== Ensemble learning applications ==\nIn the recent years, due to the growing computational power which allows training large ensemble learning in a reasonable time frame, the number of its applications has grown increasingly. Some of the applications of ensemble classifiers include:\n\n\n=== Remote sensing ===\n\n\n==== Land cover mapping ====\nLand cover mapping is one of the major applications of Earth observation satellite sensors, using remote sensing and geospatial data, to identify the materials and objects which are located on the surface of target areas. Generally, the classes of target materials include roads, buildings, rivers, lakes, and vegetation. Some different ensemble learning approaches based on artificial neural networks, kernel principal component analysis (KPCA), decision trees with boosting, random forest and automatic design of multiple classifier systems, are proposed to efficiently identify land cover objects.\n\n\n==== Change detection ====\nChange detection is an image analysis problem, consisting of the identification of places where the land cover has changed over time. Change detection is widely used in fields such as urban growth, forest and vegetation dynamics, land use and disaster monitoring.\nThe earliest applications of ensemble classifiers in change detection are designed with the majority voting, Bayesian average and the maximum posterior probability.\n\n\n=== Computer security ===\n\n\n==== Distributed denial of service ====\nDistributed denial of service is one of the most threatening cyber-attacks that may happen to an internet service provider. By combining the output of single classifiers, ensemble classifiers reduce the total error of detecting and discriminating such attacks from legitimate flash crowds.\n\n\n==== Malware Detection ====\nClassification of malware codes such as computer viruses, computer worms, trojans, ransomware and spywares with the usage of machine learning techniques, is inspired by the document categorization problem. Ensemble learning systems have shown a proper efficacy in this area.\n\n\n==== Intrusion detection ====\nAn intrusion detection system monitors computer network or computer systems to identify intruder codes like an anomaly detection process. Ensemble learning successfully aids such monitoring systems to reduce their total error.\n\n\n=== Face recognition ===\n\nFace recognition, which recently has become one of the most popular research areas of pattern recognition, copes with identification or verification of a person by his/her digital images.Hierarchical ensembles based on Gabor Fisher classifier and independent component analysis preprocessing techniques are some of the earliest ensembles employed in this field.\n\n\n=== Emotion recognition ===\n\nWhile speech recognition is mainly based on deep learning because most of the industry players in this field like Google, Microsoft and IBM reveal that the core technology of their speech recognition is based on this approach, speech-based emotion recognition can also have a satisfactory performance with ensemble learning.It is also being successfully used in facial emotion recognition.\n\n\n=== Fraud detection ===\n\nFraud detection deals with the identification of bank fraud, such as money laundering, credit card fraud and telecommunication fraud, which have vast domains of research and applications of machine learning. Because ensemble learning improves the robustness of the normal behavior modelling, it has been proposed as an efficient technique to detect such fraudulent cases and activities in banking and credit card systems.\n\n\n=== Financial decision-making ===\nThe accuracy of prediction of business failure is a very crucial issue in financial decision-making. Therefore, different ensemble classifiers are proposed to predict financial crises and financial distress. Also, in the trade-based manipulation problem, where traders attempt to manipulate stock prices by buying and selling activities, ensemble classifiers are required to analyze the changes in the stock market data and detect suspicious symptom of stock price manipulation.\n\n\n=== Medicine ===\nEnsemble classifiers have been successfully applied in neuroscience, proteomics and medical diagnosis like in neuro-cognitive disorder (i.e. Alzheimer or myotonic dystrophy) detection based on MRI datasets.\n\n\n== See also ==\nEnsemble averaging (machine learning)\nBayesian structural time series (BSTS)\n\n\n== References ==\n\n\n== Further reading ==\nZhou Zhihua (2012). Ensemble Methods: Foundations and Algorithms. Chapman and Hall/CRC. ISBN 978-1-439-83003-1.\nRobert Schapire; Yoav Freund (2012). Boosting: Foundations and Algorithms. MIT. ISBN 978-0-262-01718-3.\n\n\n== External links ==\nRobi Polikar (ed.). "Ensemble learning". Scholarpedia.\nThe Waffles (machine learning) toolkit contains implementations of Bagging, Boosting, Bayesian Model Averaging, Bayesian Model Combination, Bucket-of-models, and other ensemble techniques