T-distributed Stochastic Neighbor Embedding (t-SNE) is a machine learning algorithm for visualization developed by Laurens van der Maaten and Geoffrey Hinton. It is a nonlinear dimensionality reduction technique well-suited for embedding high-dimensional data for visualization in a low-dimensional space of two or three dimensions. Specifically, it models each high-dimensional object by a two- or three-dimensional point in such a way that similar objects are modeled by nearby points and dissimilar objects are modeled by distant points with high probability.\nThe t-SNE algorithm comprises two main stages. First, t-SNE constructs a probability distribution over pairs of high-dimensional objects in such a way that similar objects are assigned a higher probability while dissimilar points are assigned a very low probability. Second, t-SNE defines a similar probability distribution over the points in the low-dimensional map, and it minimizes the Kullback\u2013Leibler divergence (KL divergence) between the two distributions with respect to the locations of the points in the map. While the original algorithm uses the Euclidean distance between objects as the base of its similarity metric, this can be changed as appropriate.\nt-SNE has been used for visualization in a wide range of applications, including computer security research, music analysis, cancer research, bioinformatics, and biomedical signal processing. It is often used to visualize high-level representations learned by an artificial neural network.While t-SNE plots often seem to display clusters, the visual clusters can be influenced strongly by the chosen parameterization and therefore a good understanding of the parameters for t-SNE is necessary. Such "clusters" can be shown to even appear in non-clustered data, and thus may be false findings. Interactive exploration may thus be necessary to choose parameters and validate results. It has been demonstrated that t-SNE is often able to recover well-separated clusters, and with special parameter choices, approximates a simple form of spectral clustering.\n\n\n== Details ==\nGiven a set of \n  \n    \n      \n        N\n      \n    \n    {\\displaystyle N}\n   high-dimensional objects \n  \n    \n      \n        \n          \n            x\n          \n          \n            1\n          \n        \n        ,\n        \u2026\n        ,\n        \n          \n            x\n          \n          \n            N\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {x} _{1},\\dots ,\\mathbf {x} _{N}}\n  , t-SNE first computes probabilities \n  \n    \n      \n        \n          p\n          \n            i\n            j\n          \n        \n      \n    \n    {\\displaystyle p_{ij}}\n   that are proportional to the similarity of objects \n  \n    \n      \n        \n          \n            x\n          \n          \n            i\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {x} _{i}}\n   and \n  \n    \n      \n        \n          \n            x\n          \n          \n            j\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {x} _{j}}\n  , as follows. \nFor \n  \n    \n      \n        i\n        \u2260\n        j\n      \n    \n    {\\displaystyle i\\neq j}\n  , define \n\n  \n    \n      \n        \n          p\n          \n            j\n            \u2223\n            i\n          \n        \n        =\n        \n          \n            \n              exp\n              \u2061\n              (\n              \u2212\n              \u2016\n              \n                \n                  x\n                \n                \n                  i\n                \n              \n              \u2212\n              \n                \n                  x\n                \n                \n                  j\n                \n              \n              \n                \u2016\n                \n                  2\n                \n              \n              \n                /\n              \n              2\n              \n                \u03c3\n                \n                  i\n                \n                \n                  2\n                \n              \n              )\n            \n            \n              \n                \u2211\n                \n                  k\n                  \u2260\n                  i\n                \n              \n              exp\n              \u2061\n              (\n              \u2212\n              \u2016\n              \n                \n                  x\n                \n                \n                  i\n                \n              \n              \u2212\n              \n                \n                  x\n                \n                \n                  k\n                \n              \n              \n                \u2016\n                \n                  2\n                \n              \n              \n                /\n              \n              2\n              \n                \u03c3\n                \n                  i\n                \n                \n                  2\n                \n              \n              )\n            \n          \n        \n      \n    \n    {\\displaystyle p_{j\\mid i}={\\frac {\\exp(-\\lVert \\mathbf {x} _{i}-\\mathbf {x} _{j}\\rVert ^{2}/2\\sigma _{i}^{2})}{\\sum _{k\\neq i}\\exp(-\\lVert \\mathbf {x} _{i}-\\mathbf {x} _{k}\\rVert ^{2}/2\\sigma _{i}^{2})}}}\n  and set \n  \n    \n      \n        \n          p\n          \n            i\n            \u2223\n            i\n          \n        \n        =\n        0\n      \n    \n    {\\displaystyle p_{i\\mid i}=0}\n  . \nNote that \n  \n    \n      \n        \n          \u2211\n          \n            j\n          \n        \n        \n          p\n          \n            j\n            \u2223\n            i\n          \n        \n        =\n        1\n      \n    \n    {\\displaystyle \\sum _{j}p_{j\\mid i}=1}\n   for all \n  \n    \n      \n        i\n      \n    \n    {\\displaystyle i}\n  . \nAs Van der Maaten and Hinton explained:  "The similarity of datapoint \n  \n    \n      \n        \n          x\n          \n            j\n          \n        \n      \n    \n    {\\displaystyle x_{j}}\n   to datapoint \n  \n    \n      \n        \n          x\n          \n            i\n          \n        \n      \n    \n    {\\displaystyle x_{i}}\n   is the conditional probability, \n  \n    \n      \n        \n          p\n          \n            j\n            \n              |\n            \n            i\n          \n        \n      \n    \n    {\\displaystyle p_{j|i}}\n  , that \n  \n    \n      \n        \n          x\n          \n            i\n          \n        \n      \n    \n    {\\displaystyle x_{i}}\n   would pick \n  \n    \n      \n        \n          x\n          \n            j\n          \n        \n      \n    \n    {\\displaystyle x_{j}}\n   as its neighbor if neighbors were picked in proportion to their probability density under a Gaussian centered at \n  \n    \n      \n        \n          x\n          \n            i\n          \n        \n      \n    \n    {\\displaystyle x_{i}}\n  ."Now define \n\n  \n    \n      \n        \n          p\n          \n            i\n            j\n          \n        \n        =\n        \n          \n            \n              \n                p\n                \n                  j\n                  \u2223\n                  i\n                \n              \n              +\n              \n                p\n                \n                  i\n                  \u2223\n                  j\n                \n              \n            \n            \n              2\n              N\n            \n          \n        \n      \n    \n    {\\displaystyle p_{ij}={\\frac {p_{j\\mid i}+p_{i\\mid j}}{2N}}}\n  and note that \n  \n    \n      \n        \n          p\n          \n            i\n            j\n          \n        \n        =\n        \n          p\n          \n            j\n            i\n          \n        \n      \n    \n    {\\displaystyle p_{ij}=p_{ji}}\n  , \n  \n    \n      \n        \n          p\n          \n            i\n            i\n          \n        \n        =\n        0\n      \n    \n    {\\displaystyle p_{ii}=0}\n  , and \n  \n    \n      \n        \n          \u2211\n          \n            i\n            ,\n            j\n          \n        \n        \n          p\n          \n            i\n            j\n          \n        \n        =\n        1\n      \n    \n    {\\displaystyle \\sum _{i,j}p_{ij}=1}\n  . \nThe bandwidth of the Gaussian kernels \n  \n    \n      \n        \n          \u03c3\n          \n            i\n          \n        \n      \n    \n    {\\displaystyle \\sigma _{i}}\n   is set in such a way that the perplexity of the conditional distribution equals a predefined perplexity using the bisection method. As a result, the bandwidth is adapted to the density of the data: smaller values of \n  \n    \n      \n        \n          \u03c3\n          \n            i\n          \n        \n      \n    \n    {\\displaystyle \\sigma _{i}}\n   are used in denser parts of the data space.\nSince the Gaussian kernel uses the Euclidean distance \n  \n    \n      \n        \u2016\n        \n          x\n          \n            i\n          \n        \n        \u2212\n        \n          x\n          \n            j\n          \n        \n        \u2016\n      \n    \n    {\\displaystyle \\lVert x_{i}-x_{j}\\rVert }\n  , it is affected by the curse of dimensionality, and in high dimensional data when distances lose the ability to discriminate, the \n  \n    \n      \n        \n          p\n          \n            i\n            j\n          \n        \n      \n    \n    {\\displaystyle p_{ij}}\n   become too similar (asymptotically, they would converge to a constant). It has been proposed to adjust the distances with a power transform, based on the intrinsic dimension of each point, to alleviate this.t-SNE aims to learn a \n  \n    \n      \n        d\n      \n    \n    {\\displaystyle d}\n  -dimensional map \n  \n    \n      \n        \n          \n            y\n          \n          \n            1\n          \n        \n        ,\n        \u2026\n        ,\n        \n          \n            y\n          \n          \n            N\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {y} _{1},\\dots ,\\mathbf {y} _{N}}\n   (with \n  \n    \n      \n        \n          \n            y\n          \n          \n            i\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            d\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {y} _{i}\\in \\mathbb {R} ^{d}}\n  ) that reflects the similarities  \n  \n    \n      \n        \n          p\n          \n            i\n            j\n          \n        \n      \n    \n    {\\displaystyle p_{ij}}\n   as well as possible. To this end, it measures similarities \n  \n    \n      \n        \n          q\n          \n            i\n            j\n          \n        \n      \n    \n    {\\displaystyle q_{ij}}\n   between two points in the map \n  \n    \n      \n        \n          \n            y\n          \n          \n            i\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {y} _{i}}\n   and \n  \n    \n      \n        \n          \n            y\n          \n          \n            j\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {y} _{j}}\n  , using a very similar approach. \nSpecifically, for \n  \n    \n      \n        i\n        \u2260\n        j\n      \n    \n    {\\displaystyle i\\neq j}\n  , define \n  \n    \n      \n        \n          q\n          \n            i\n            j\n          \n        \n      \n    \n    {\\displaystyle q_{ij}}\n   as\n\n  \n    \n      \n        \n          q\n          \n            i\n            j\n          \n        \n        =\n        \n          \n            \n              (\n              1\n              +\n              \u2016\n              \n                \n                  y\n                \n                \n                  i\n                \n              \n              \u2212\n              \n                \n                  y\n                \n                \n                  j\n                \n              \n              \n                \u2016\n                \n                  2\n                \n              \n              \n                )\n                \n                  \u2212\n                  1\n                \n              \n            \n            \n              \n                \u2211\n                \n                  k\n                \n              \n              \n                \u2211\n                \n                  l\n                  \u2260\n                  k\n                \n              \n              (\n              1\n              +\n              \u2016\n              \n                \n                  y\n                \n                \n                  k\n                \n              \n              \u2212\n              \n                \n                  y\n                \n                \n                  l\n                \n              \n              \n                \u2016\n                \n                  2\n                \n              \n              \n                )\n                \n                  \u2212\n                  1\n                \n              \n            \n          \n        \n      \n    \n    {\\displaystyle q_{ij}={\\frac {(1+\\lVert \\mathbf {y} _{i}-\\mathbf {y} _{j}\\rVert ^{2})^{-1}}{\\sum _{k}\\sum _{l\\neq k}(1+\\lVert \\mathbf {y} _{k}-\\mathbf {y} _{l}\\rVert ^{2})^{-1}}}}\n  and set \n  \n    \n      \n        \n          q\n          \n            i\n            i\n          \n        \n        =\n        0\n      \n    \n    {\\displaystyle q_{ii}=0}\n  . \nHerein a heavy-tailed Student t-distribution (with one-degree of freedom, which is the same as a Cauchy distribution) is used to measure similarities between low-dimensional points in order to allow dissimilar objects to be modeled far apart in the map. \nThe locations of the points \n  \n    \n      \n        \n          \n            y\n          \n          \n            i\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {y} _{i}}\n   in the map are determined by minimizing the (non-symmetric) Kullback\u2013Leibler divergence of the distribution \n  \n    \n      \n        P\n      \n    \n    {\\displaystyle P}\n   from the distribution \n  \n    \n      \n        Q\n      \n    \n    {\\displaystyle Q}\n  , that is:\n\n  \n    \n      \n        \n          K\n          L\n        \n        \n          (\n          \n            P\n            \u2225\n            Q\n          \n          )\n        \n        =\n        \n          \u2211\n          \n            i\n            \u2260\n            j\n          \n        \n        \n          p\n          \n            i\n            j\n          \n        \n        log\n        \u2061\n        \n          \n            \n              p\n              \n                i\n                j\n              \n            \n            \n              q\n              \n                i\n                j\n              \n            \n          \n        \n      \n    \n    {\\displaystyle \\mathrm {KL} \\left(P\\parallel Q\\right)=\\sum _{i\\neq j}p_{ij}\\log {\\frac {p_{ij}}{q_{ij}}}}\n  The minimization of the Kullback\u2013Leibler divergence with respect to the points \n  \n    \n      \n        \n          \n            y\n          \n          \n            i\n          \n        \n      \n    \n    {\\displaystyle \\mathbf {y} _{i}}\n   is performed using gradient descent. \nThe result of this optimization is a map that reflects the similarities between the high-dimensional inputs.\n\n\n== Software ==\nLaurens van der Maaten's t-Distributed Stochastic Neighbor Embedding https://lvdmaaten.github.io/tsne/\nELKI contains tSNE, also with Barnes-Hut approximation. https://github.com/elki-project/elki/blob/master/elki/src/main/java/elki/projection/TSNE.java\n\n\n== References ==\n\n\n== External links ==\nVisualizing Data Using t-SNE, Google Tech Talk about t-SNE