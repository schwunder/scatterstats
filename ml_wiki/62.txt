Long short-term memory (LSTM) is an artificial recurrent neural network (RNN) architecture used in the field of deep learning. Unlike standard feedforward neural networks, LSTM has feedback connections. It can not only process single data points (such as images), but also entire sequences of data (such as speech or video). For example, LSTM is applicable to tasks such as unsegmented, connected handwriting recognition, speech recognition and anomaly detection in network traffic or IDSs (intrusion detection systems).\nA common LSTM unit is composed of a cell, an input gate, an output gate and a forget gate. The cell remembers values over arbitrary time intervals and the three gates regulate the flow of information into and out of the cell.\nLSTM networks are well-suited to classifying, processing and making predictions based on time series data, since there can be lags of unknown duration between important events in a time series. LSTMs were developed to deal with the vanishing gradient problem that can be encountered when training traditional RNNs. Relative insensitivity to gap length is an advantage of LSTM over RNNs, hidden Markov models and other sequence learning methods in numerous applications.\n\n\n== History ==\n1997: LSTM was proposed by Sepp Hochreiter and J\xfcrgen Schmidhuber. By introducing Constant Error Carousel (CEC) units, LSTM deals with the vanishing gradient problem. The initial version of LSTM block included cells, input and output gates.1999: Felix Gers and his advisor J\xfcrgen Schmidhuber and Fred Cummins introduced the forget gate (also called \u201ckeep gate\u201d) into LSTM architecture, \nenabling the LSTM to reset its own state.2000: Gers & Schmidhuber & Cummins added peephole connections (connections from the cell to the gates) into the architecture. Additionally, the output activation function was omitted.2009: An LSTM based model won the ICDAR connected handwriting recognition competition. Three such models were submitted by a team lead by Alex Graves. One was the most accurate model in the competition and another was the fastest.2013: LSTM networks were a major component of a network that achieved a record 17.7% phoneme error rate on the classic TIMIT natural speech dataset.2014: Kyunghyun Cho et al. put forward a simplified variant called Gated recurrent unit (GRU).2015: Google started using an LSTM for speech recognition on Google Voice. According to the official blog post, the new model cut transcription errors by 49%. 2016: Google started using an LSTM to suggest messages in the Allo conversation app. In the same year, Google released the Google Neural Machine Translation system for Google Translate which used LSTMs to reduce translation errors by 60%.Apple announced in its Worldwide Developers Conference that it would start using the LSTM for quicktype in the iPhone and for Siri.Amazon released Polly, which generates the voices behind Alexa, using a bidirectional LSTM for the text-to-speech technology.2017:  Facebook performed some 4.5 billion automatic translations every day using long short-term memory networks.Researchers from Michigan State University, IBM Research, and Cornell University published a study in the Knowledge Discovery and Data Mining (KDD) conference. Their study describes a novel neural network that performs better on certain data sets than the widely used long short-term memory neural network.\nMicrosoft reported reaching 94.9% recognition accuracy on the Switchboard corpus, incorporating a vocabulary of 165,000 words. The approach used "dialog session-based long-short-term memory".2019: Researchers from the University of Waterloo proposed a related RNN architecture which represents continuous windows of time. It was derived using the Legendre polynomials and outperforms the LSTM on some memory-related benchmarks.An LSTM model climbed to third place on the in Large Text Compression Benchmark.\n\n\n== Idea ==\nIn theory, classic (or "vanilla") RNNs can keep track of arbitrary long-term dependencies in the input sequences. The problem of vanilla RNNs is computational (or practical) in nature: when training a vanilla RNN using back-propagation, the gradients which are back-propagated can "vanish" (that is, they can tend to zero) or "explode" (that is, they can tend to infinity), because of the computations involved in the process, which use finite-precision numbers. RNNs using LSTM units partially solve the vanishing gradient problem, because LSTM units allow gradients to also flow unchanged. However, LSTM networks can still suffer from the exploding gradient problem.\n\n\n== Architecture ==\nThere are several architectures of LSTM units. A common architecture is composed of a cell (the memory part of the LSTM unit) and three "regulators", usually called gates, of the flow of information inside the LSTM unit: an input gate, an output gate and a forget gate. Some variations of the LSTM unit do not have one or more of these gates or maybe have other gates. For example, gated recurrent units (GRUs) do not have an output gate.\nIntuitively, the cell is responsible for keeping track of the dependencies between the elements in the input sequence. The input gate controls the extent to which a new value flows into the cell, the forget gate controls the extent to which a value remains in the cell and the output gate controls the extent to which the value in the cell is used to compute the output activation of the LSTM unit. The activation function of the LSTM gates is often the logistic sigmoid function.\nThere are connections into and out of the LSTM gates, a few of which are recurrent. The weights of these connections, which need to be learned during training, determine how the gates operate.\n\n\n== Variants ==\nIn the equations below, the lowercase variables represent vectors. Matrices \n  \n    \n      \n        \n          W\n          \n            q\n          \n        \n      \n    \n    {\\displaystyle W_{q}}\n   and \n  \n    \n      \n        \n          U\n          \n            q\n          \n        \n      \n    \n    {\\displaystyle U_{q}}\n   contain, respectively, the weights of the input and recurrent connections, where the subscript \n  \n    \n      \n        \n          \n          \n            q\n          \n        \n      \n    \n    {\\displaystyle _{q}}\n   can either be the input gate \n  \n    \n      \n        i\n      \n    \n    {\\displaystyle i}\n  , output gate \n  \n    \n      \n        o\n      \n    \n    {\\displaystyle o}\n  , the forget gate \n  \n    \n      \n        f\n      \n    \n    {\\displaystyle f}\n   or the memory cell \n  \n    \n      \n        c\n      \n    \n    {\\displaystyle c}\n  , depending on the activation being calculated. In this section, we are thus using a "vector notation". So, for example, \n  \n    \n      \n        \n          c\n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle c_{t}\\in \\mathbb {R} ^{h}}\n   is not just one cell of one LSTM unit, but contains \n  \n    \n      \n        h\n      \n    \n    {\\displaystyle h}\n   LSTM unit's cells.\n\n\n=== LSTM with a forget gate ===\nThe compact forms of the equations for the forward pass of an LSTM unit with a forget gate are:\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  f\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    f\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    f\n                  \n                \n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    f\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  i\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    i\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    i\n                  \n                \n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    i\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  o\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    o\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    o\n                  \n                \n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    o\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  \n                    \n                      \n                        c\n                        ~\n                      \n                    \n                  \n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    h\n                  \n                \n                (\n                \n                  W\n                  \n                    c\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    c\n                  \n                \n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    c\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  c\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  f\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  i\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  \n                    \n                      \n                        c\n                        ~\n                      \n                    \n                  \n                  \n                    t\n                  \n                \n              \n            \n            \n              \n                \n                  h\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  o\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  \u03c3\n                  \n                    h\n                  \n                \n                (\n                \n                  c\n                  \n                    t\n                  \n                \n                )\n              \n            \n          \n        \n      \n    \n    {\\displaystyle {\\begin{aligned}f_{t}&=\\sigma _{g}(W_{f}x_{t}+U_{f}h_{t-1}+b_{f})\\\\i_{t}&=\\sigma _{g}(W_{i}x_{t}+U_{i}h_{t-1}+b_{i})\\\\o_{t}&=\\sigma _{g}(W_{o}x_{t}+U_{o}h_{t-1}+b_{o})\\\\{\\tilde {c}}_{t}&=\\sigma _{h}(W_{c}x_{t}+U_{c}h_{t-1}+b_{c})\\\\c_{t}&=f_{t}\\circ c_{t-1}+i_{t}\\circ {\\tilde {c}}_{t}\\\\h_{t}&=o_{t}\\circ \\sigma _{h}(c_{t})\\end{aligned}}}\n  where the initial values are \n  \n    \n      \n        \n          c\n          \n            0\n          \n        \n        =\n        0\n      \n    \n    {\\displaystyle c_{0}=0}\n   and \n  \n    \n      \n        \n          h\n          \n            0\n          \n        \n        =\n        0\n      \n    \n    {\\displaystyle h_{0}=0}\n   and the operator \n  \n    \n      \n        \u2218\n      \n    \n    {\\displaystyle \\circ }\n   denotes the Hadamard product (element-wise product). The subscript \n  \n    \n      \n        t\n      \n    \n    {\\displaystyle t}\n   indexes the time step.\n\n\n==== Variables ====\n\n  \n    \n      \n        \n          x\n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            d\n          \n        \n      \n    \n    {\\displaystyle x_{t}\\in \\mathbb {R} ^{d}}\n  : input vector to the LSTM unit\n\n  \n    \n      \n        \n          f\n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle f_{t}\\in \\mathbb {R} ^{h}}\n  : forget gate's activation vector\n\n  \n    \n      \n        \n          i\n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle i_{t}\\in \\mathbb {R} ^{h}}\n  : input/update gate's activation vector\n\n  \n    \n      \n        \n          o\n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle o_{t}\\in \\mathbb {R} ^{h}}\n  : output gate's activation vector\n\n  \n    \n      \n        \n          h\n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle h_{t}\\in \\mathbb {R} ^{h}}\n  : hidden state vector also known as output vector of the LSTM unit\n\n  \n    \n      \n        \n          \n            \n              \n                c\n                ~\n              \n            \n          \n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle {\\tilde {c}}_{t}\\in \\mathbb {R} ^{h}}\n  : cell input activation vector\n\n  \n    \n      \n        \n          c\n          \n            t\n          \n        \n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle c_{t}\\in \\mathbb {R} ^{h}}\n  : cell state vector\n\n  \n    \n      \n        W\n        \u2208\n        \n          \n            R\n          \n          \n            h\n            \xd7\n            d\n          \n        \n      \n    \n    {\\displaystyle W\\in \\mathbb {R} ^{h\\times d}}\n  , \n  \n    \n      \n        U\n        \u2208\n        \n          \n            R\n          \n          \n            h\n            \xd7\n            h\n          \n        \n      \n    \n    {\\displaystyle U\\in \\mathbb {R} ^{h\\times h}}\n   and \n  \n    \n      \n        b\n        \u2208\n        \n          \n            R\n          \n          \n            h\n          \n        \n      \n    \n    {\\displaystyle b\\in \\mathbb {R} ^{h}}\n  : weight matrices and bias vector parameters which need to be learned during trainingwhere the superscripts \n  \n    \n      \n        d\n      \n    \n    {\\displaystyle d}\n   and \n  \n    \n      \n        h\n      \n    \n    {\\displaystyle h}\n   refer to the number of input features and number of hidden units, respectively.\n\n\n==== Activation functions ====\n\n  \n    \n      \n        \n          \u03c3\n          \n            g\n          \n        \n      \n    \n    {\\displaystyle \\sigma _{g}}\n  : sigmoid function.\n\n  \n    \n      \n        \n          \u03c3\n          \n            c\n          \n        \n      \n    \n    {\\displaystyle \\sigma _{c}}\n  : hyperbolic tangent function.\n\n  \n    \n      \n        \n          \u03c3\n          \n            h\n          \n        \n      \n    \n    {\\displaystyle \\sigma _{h}}\n  : hyperbolic tangent function or, as the peephole LSTM paper suggests, \n  \n    \n      \n        \n          \u03c3\n          \n            h\n          \n        \n        (\n        x\n        )\n        =\n        x\n      \n    \n    {\\displaystyle \\sigma _{h}(x)=x}\n  .\n\n\n=== Peephole LSTM ===\n\nThe figure on the right is a graphical representation of an LSTM unit with peephole connections (i.e. a peephole LSTM). Peephole connections allow the gates to access the constant error carousel (CEC), whose activation is the cell state. \n  \n    \n      \n        \n          h\n          \n            t\n            \u2212\n            1\n          \n        \n      \n    \n    {\\displaystyle h_{t-1}}\n   is not used, \n  \n    \n      \n        \n          c\n          \n            t\n            \u2212\n            1\n          \n        \n      \n    \n    {\\displaystyle c_{t-1}}\n   is used instead in most places.\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  f\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    f\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    f\n                  \n                \n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    f\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  i\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    i\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    i\n                  \n                \n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    i\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  o\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    o\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    o\n                  \n                \n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    o\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  c\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  f\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  i\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  \u03c3\n                  \n                    c\n                  \n                \n                (\n                \n                  W\n                  \n                    c\n                  \n                \n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  b\n                  \n                    c\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  h\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  o\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  \u03c3\n                  \n                    h\n                  \n                \n                (\n                \n                  c\n                  \n                    t\n                  \n                \n                )\n              \n            \n          \n        \n      \n    \n    {\\displaystyle {\\begin{aligned}f_{t}&=\\sigma _{g}(W_{f}x_{t}+U_{f}c_{t-1}+b_{f})\\\\i_{t}&=\\sigma _{g}(W_{i}x_{t}+U_{i}c_{t-1}+b_{i})\\\\o_{t}&=\\sigma _{g}(W_{o}x_{t}+U_{o}c_{t-1}+b_{o})\\\\c_{t}&=f_{t}\\circ c_{t-1}+i_{t}\\circ \\sigma _{c}(W_{c}x_{t}+b_{c})\\\\h_{t}&=o_{t}\\circ \\sigma _{h}(c_{t})\\end{aligned}}}\n  \n\n\n=== Peephole convolutional LSTM ===\nPeephole convolutional LSTM. The \n  \n    \n      \n        \u2217\n      \n    \n    {\\displaystyle *}\n   denotes the convolution operator.\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  f\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    f\n                  \n                \n                \u2217\n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    f\n                  \n                \n                \u2217\n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  V\n                  \n                    f\n                  \n                \n                \u2218\n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    f\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  i\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    i\n                  \n                \n                \u2217\n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    i\n                  \n                \n                \u2217\n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  V\n                  \n                    i\n                  \n                \n                \u2218\n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    i\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  c\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  f\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  c\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  i\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  \u03c3\n                  \n                    c\n                  \n                \n                (\n                \n                  W\n                  \n                    c\n                  \n                \n                \u2217\n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    c\n                  \n                \n                \u2217\n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  b\n                  \n                    c\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  o\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  \u03c3\n                  \n                    g\n                  \n                \n                (\n                \n                  W\n                  \n                    o\n                  \n                \n                \u2217\n                \n                  x\n                  \n                    t\n                  \n                \n                +\n                \n                  U\n                  \n                    o\n                  \n                \n                \u2217\n                \n                  h\n                  \n                    t\n                    \u2212\n                    1\n                  \n                \n                +\n                \n                  V\n                  \n                    o\n                  \n                \n                \u2218\n                \n                  c\n                  \n                    t\n                  \n                \n                +\n                \n                  b\n                  \n                    o\n                  \n                \n                )\n              \n            \n            \n              \n                \n                  h\n                  \n                    t\n                  \n                \n              \n              \n                \n                =\n                \n                  o\n                  \n                    t\n                  \n                \n                \u2218\n                \n                  \u03c3\n                  \n                    h\n                  \n                \n                (\n                \n                  c\n                  \n                    t\n                  \n                \n                )\n              \n            \n          \n        \n      \n    \n    {\\displaystyle {\\begin{aligned}f_{t}&=\\sigma _{g}(W_{f}*x_{t}+U_{f}*h_{t-1}+V_{f}\\circ c_{t-1}+b_{f})\\\\i_{t}&=\\sigma _{g}(W_{i}*x_{t}+U_{i}*h_{t-1}+V_{i}\\circ c_{t-1}+b_{i})\\\\c_{t}&=f_{t}\\circ c_{t-1}+i_{t}\\circ \\sigma _{c}(W_{c}*x_{t}+U_{c}*h_{t-1}+b_{c})\\\\o_{t}&=\\sigma _{g}(W_{o}*x_{t}+U_{o}*h_{t-1}+V_{o}\\circ c_{t}+b_{o})\\\\h_{t}&=o_{t}\\circ \\sigma _{h}(c_{t})\\end{aligned}}}\n  \n\n\n== Training ==\nAn RNN using LSTM units can be trained in a supervised fashion, on a set of training sequences, using an optimization algorithm, like gradient descent, combined with backpropagation through time to compute the gradients needed during the optimization process, in order to change each weight of the LSTM network in proportion to the derivative of the error (at the output layer of the LSTM network) with respect to corresponding weight.\nA problem with using gradient descent for standard RNNs is that error gradients vanish exponentially quickly with the size of the time lag between important events. This is due to \n  \n    \n      \n        \n          lim\n          \n            n\n            \u2192\n            \u221e\n          \n        \n        \n          W\n          \n            n\n          \n        \n        =\n        0\n      \n    \n    {\\displaystyle \\lim _{n\\to \\infty }W^{n}=0}\n   if the spectral radius of \n  \n    \n      \n        W\n      \n    \n    {\\displaystyle W}\n   is smaller than 1.However, with LSTM units, when error values are back-propagated from the output layer, the error remains in the LSTM unit's cell. This "error carousel" continuously feeds error back to each of the LSTM unit's gates, until they learn to cut off the value.\n\n\n=== CTC score function ===\nMany applications use stacks of LSTM RNNs and train them by connectionist temporal classification (CTC) to find an RNN weight matrix that maximizes the probability of the label sequences in a training set, given the corresponding input sequences. CTC achieves both alignment and recognition.\n\n\n=== Alternatives ===\nSometimes, it can be advantageous to train (parts of) an LSTM by neuroevolution or by policy gradient methods, especially when there is no "teacher" (that is, training labels).\n\n\n==== Success ====\nThere have been several successful stories of training, in a non-supervised fashion, RNNs with LSTM units.\nIn 2018, Bill Gates called it a \u201chuge milestone in advancing artificial intelligence\u201d when bots developed by OpenAI were able to beat humans in the game of Dota 2. OpenAI Five consists of five independent but coordinated neural networks. Each network is trained by a policy gradient method without supervising teacher and contains a single-layer, 1024-unit Long-Short-Term-Memory that sees the current game state and emits actions through several possible action heads.In 2018, OpenAI also trained a similar LSTM by policy gradients to control a human-like robot hand that manipulates physical objects with unprecedented dexterity.In 2019, DeepMind's program AlphaStar used a deep LSTM core to excel at the complex video game Starcraft II. This was viewed as significant progress towards Artificial General Intelligence.\n\n\n== Applications ==\nApplications of LSTM include:\n\nRobot control\nTime series prediction\nSpeech recognition\nRhythm learning\nMusic composition\nGrammar learning\nHandwriting recognition\nHuman action recognition\nSign language translation\nProtein homology detection\nPredicting subcellular localization of proteins\nTime series anomaly detection\nSeveral prediction tasks in the area of business process management\nPrediction in medical care pathways\nSemantic parsing\nObject co-segmentation\nAirport passenger management\nShort-term traffic forecast\n\n\n== See also ==\nRecurrent neural network\nDeep learning\nGated recurrent unit\nDifferentiable neural computer\nLong-term potentiation\nPrefrontal cortex basal ganglia working memory\nTime series\nSeq2seq\nHighway network\n\n\n== References ==\n\n\n== External links ==\nRecurrent Neural Networks with over 30 LSTM papers by J\xfcrgen Schmidhuber's group at IDSIA\nGers, Felix (2001). "Long Short-Term Memory in Recurrent Neural Networks" (PDF). PhD thesis.\nGers, Felix A.; Schraudolph, Nicol N.; Schmidhuber, J\xfcrgen (Aug 2002). "Learning precise timing with LSTM recurrent networks" (PDF). Journal of Machine Learning Research. 3: 115\u2013143.\nAbidogun, Olusola Adeniyi (2005). Data Mining, Fraud Detection and Mobile Telecommunications: Call Pattern Analysis with Unsupervised Neural Networks. Master's Thesis (Thesis). University of the Western Cape. hdl:11394/249. Archived (PDF) from the original on May 22, 2012.original with two chapters devoted to explaining recurrent neural networks, especially LSTM.\nMonner, Derek D.; Reggia, James A. (2010). "A generalized LSTM-like training algorithm for second-order recurrent neural networks" (PDF). Neural Networks. 25 (1): 70\u201383. doi:10.1016/j.neunet.2011.07.003. PMC 3217173. PMID 21803542. High-performing extension of LSTM that has been simplified to a single node type and can train arbitrary architectures\nHerta, Christian. "How to implement LSTM in Python with Theano". Tutorial.